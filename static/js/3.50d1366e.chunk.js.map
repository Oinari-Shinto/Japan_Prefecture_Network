{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","compose","Component","RedirectComponent","this","props","to","React","connect","dialogsPage","dispatch","SendMessage","newMessageBody","sendMessageCreator","Dialogs"],"mappings":"8NAKIA,EAAkB,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,S,SCqDRE,uBDlDiB,SAACC,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAIC,KAAKC,MAAMN,OAER,cAACG,EAAD,eAAeE,KAAKC,QAFK,cAAC,IAAD,CAAUC,GAAM,eAJb,GAEXC,IAAML,WAStC,OAFqCM,YAASX,EAATW,CAA2BL,KC2ChEK,aAjBkB,SAACV,GAClB,MAAO,CACJW,YAAaX,EAAMW,gBAIF,SAACC,GACtB,MAAO,CAEHC,YAAa,SAACC,GACVF,EAASG,YAAmBD,SAKzBX,CAGba","file":"static/js/3.50d1366e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth)  return  <Redirect to = {\"/login\"} />;\r\n\r\n            return <Component {...this.props}/>\r\n        } \r\n    }\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToProps) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\n\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n\r\n\r\n\r\n\r\n//test old version code (delete after)\r\n// const DialogsContainer = () => {\r\n\r\n\r\n\r\n//     return (\r\n//         <StoreContex.Consumer> \r\n//             { (store) => {\r\n//                 let state = store.getState().dialogsPage;\r\n//                 let onSendMessageClick = () => {\r\n//                     store.dispatch(sendMessageCreator());\r\n                     \r\n//                  }\r\n//                  let updateNewMessageBody = (newBody) => {\r\n//                     store.dispatch(updateNewMessageBodyCreator(newBody));\r\n//                  }\r\n    \r\n//                 return <Dialogs updateNewMessageBody={updateNewMessageBody} SendMessage={onSendMessageClick} dialogsPage = {state} />\r\n//             }\r\n//             }\r\n//         </StoreContex.Consumer>\r\n//     )\r\n// }\r\n\r\n\r\n//First way connect with Redirect\r\n//let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n     return { \r\n        dialogsPage: state.dialogsPage,\r\n        } \r\n        \r\n    }\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return { \r\n        \r\n        SendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n\r\n}\r\nexport default compose (\r\n    withAuthRedirect,\r\n    connect (mapStateToProps, mapDispatchToProps)\r\n)(Dialogs);\r\n\r\n"],"sourceRoot":""}